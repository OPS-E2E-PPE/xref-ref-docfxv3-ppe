### YamlMime:ManagedReference
items:
- uid: managedreference_add_exist_uid
  commentId: N:managedreference_add_exist_uid
  id: managedreference_add_exist_uid
  children:
  - Microsoft.SqlServer.Server.SqlMetaData
  langs:
  - csharp
  - vb
  name: managedreference_add_exist_uid
  nameWithType: managedreference_add_exist_uid
  fullName: managedreference_add_exist_uid
  type: Namespace
  summary: "[content](content.md)"
  assemblies:
  - System.Data.SqlClient
references:
- uid: Microsoft.SqlServer.Server.SqlMetaData
  commentId: T:Microsoft.SqlServer.Server.SqlMetaData
  parent: Microsoft.SqlServer.Server
  isExternal: false
  name: SqlMetaData
  nameWithType: SqlMetaData
  fullName: Microsoft.SqlServer.Server.SqlMetaData
- uid: Microsoft.SqlServer.Server
  commentId: N:Microsoft.SqlServer.Server
  isExternal: false
  name: Microsoft.SqlServer.Server
  nameWithType: Microsoft.SqlServer.Server
  fullName: Microsoft.SqlServer.Server